Today's Topics
Continue with discussion on run time polymorphism internals
Continue with strings , StringBuilder
Date/Time handling in Java 
Vehicle showroom assignment
overriding of equals method
var-args
Java Enums

Revision

Q 1 :  Solve
	 String s=new String("hello");
		String s1=s.concat(" abc !");
		System.out.println(s);//hello
		System.out.println(s1);//hello abc !
		s=s.concat("12345");
		System.out.println(s);//hello12345
		System.out.println(s.toUpperCase());HELLO12345
		System.out.println(s);//hello12345
		String s2=s.replace('l', 't');
		System.out.println(s);//hello12345
		System.out.println(s2);//hetto12345
		s.concat(3456);//javac err

Q 2 : What will be the o/p ?

String s1=new String("testing strings");
		String s2=new String("testing strings");
		String s3=new String("Testing Strings");
		System.out.println(s1==s2);//f
		System.out.println(s1.equals(s2));//t
		System.out.println(s1==s3);//f
		System.out.println(s1.equals(s3));//f 
		System.out.println(s1.equalsIgnoreCase(s3));//t
What will you in the practical env. to chk equality of 2 strings ? == OR equals
equals !



Q 3 :  Solve

String s="Hello";
s.toUpperCase();
s.concat("12345");
sop(s);
String s1="testing strings";
String s2=new String(s1);
sop(s1==s2);
sop(s1.equals(s2));
String s3="He"+"llo";
String s4="He".concat("llo");
String s5="hello";
sop(s==s3);
sop(s==s4);
sop(s==s5);


Q 4 Solve (Lab work)
public static void main(String[] args) {
		String s1="hello";
		String s2="hello";
		String s3=new String(s1);
		String s4=s3.intern();
		String s9=new String(s1.toUppercase());
                           String s10=s9.intern();
		//concat vs + operator
		String s5="he"+"llo";
		String s6="he".concat("llo"); 
		System.out.println(s1==s2);
		System.out.println(s1==s3);
		System.out.println(s1==s4);
		System.out.println(s1==s5);
		System.out.println(s1==s6);
		String s7=new String("Hello");//how many string objects are created in this line? : 
		String s8=new String("hello");//how many string objects are created in this line? : 
		



	}

1. String class API

2. StringBuilder API

3.Date Time Handling (refer to : readme_strings_date_varargs.txt)

java.util.Date : represents Date n time both , till precision msec.
Constrs : 
Date() : Creates date class instance : current date n time 
Date(long msec) : Creates date class instance : that represents date n time , of msecs elapsed after Epoch(1st Jan 1970)
Methods : toString , before ,after,compareTo,equals
eg : d1.compareTo(d2) :  -1 => d1 before d2
0 => d1.equals (d2)
1 => d1 after d2
------------------------------------
Case study : Showroom management system.

Objective : Accept vehicle details : chasisNo(string) : unique: PK, color(string) , price(double) , manufactureDate(Date)

What is a relationship between Vehicle n chasisNo(string) : unique, color(string) , price(double) , manufactureDate(Date) ? HAS-A

How will you accept manufactureDate from user ?


Steps
1. Create instance of a class : java.text.SimpleDateFormat

2. Parsing (string --> Date) API 

3. Formatting API (Date --> string) 


var-args
refer to :  readme_strings_date_varargs.txt


Java Enums :
refer to : day8-data\day8_help\enums\regarding enums.txt

Replace String color by Color enum.
refer to valueOf n values methods
Added the validation for color
color must be one of these  :  WHITE, GREY, SILVER, BLACK, RED


Objective : Add Vehicle details


Objective : Showroom Management system , which will keep track of vehicles added in the showroom.
1. Prompt showroom capacity
Create suitable array.
Options
1. Add Vehicle to the showroom.
Accept data --validate all i/ps --success -- add vehicle
o.w : throw exc (built in / custom exc)

2. Display all vehicle details

10. Exit

Add  validation rules

4.1 manufactureDate : must be in current financial year(1st Apr 2022 ---31st Mar 2023)
4.2 Vehicle color must be available
4.3 base price : min 10000 , max 100000
OPTIONAL (equals) 
4.4 No dup vehicles should be added in the showroom
