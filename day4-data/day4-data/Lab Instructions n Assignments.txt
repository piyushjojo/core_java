Day 1
1. Refer to "Installation Instructions" from day1-data\day1_help & complete the same.

2. MUST go through "sequence.txt"  from day1-data\day1_help\ & day1-data\day1_help\slides\PPTDay1.pdf

3. Go through simple code samples from day1-data\code\src (optional : for extra practice)

4. Solve (Hands on)
4.1 Accept 2 double values from User (using Scanner). Check data type.
. If arguments are not doubles , supply suitable error message & terminate.
If numbers are double values , print its average.
Hint : Method of Scanner to use : hasNextDouble , nextDouble 

4.2 Display food menu to user. User will select items from menu along with the quantity. (eg 1. Dosa 2. Samosa 3. Idli ... 10 . Generate Bill ) Assign fixed prices to food items(hard code the prices)
When user enters 'Generate Bill' option(10) , display total bill & exit.


OR 
Create java application for the following
Accept 2 numbers from user & operation to perform
1. Add 2.Subtract 3. Multiply 4.Divide 5.Exit
Display the result of the operation. 
Java app must continue to run till user chooses exit option.

OR
Prompt user for how many numbers(double) to accept
Create suitable data structure to hold these numbers.
Prompt user to populate the values in data structure
Display the same.
Prompt user for option
1. Double nums
2. Square nums
3. Square root nums
4. Exit
As per the option , apply this operation on all nums in the data structure
display the result.

Additional reference for long to float conversion
https://stackoverflow.com/questions/15229323/java-why-is-converting-a-long-64-to-float-32-considered-widening/15229379


Day 2

1. Refer to today's sequence
refer : day2-data\code
to revise mem pics , GC ,packages , access specifiers n setting of classapth
refer : day1-data\day1_help\diagrams\different type of vars.png

(refer : whiteboard.png)

2. Solve Tank assignment along with memory picture.

What will be the output ?

class Tank {
  private int level;
  Tank(int l)
   {
     level=l;
   }
  public void setLevel(int level1)
  {
    level=level1;
  }
  public int getLevel()
  {
    return level;
  }
}	

public class Assignment {
  public static void main(String[] args) {
    Tank t1 = new Tank(10);
    Tank t2 = new Tank(20);
     s.o.p("1: t1.level: " + t1.getLevel() +
          ", t2.level: " + t2.getLevel());
    t1 = t2;//1st tank obj is marked GC
    s.o.p("2: t1.level: " + t1.getLevel() +
          ", t2.level: " + t2.getLevel());
    t1.setLevel(27);
     s.o.p("3: t1.level: " + t1.getLevel() +
          ", t2.level: " + t2.getLevel());
    t2.setLevel(t1.getLevel()+10);
     s.o.p("4: t1.level: " + t1.getLevel() +
          ", t2.level: " + t2.getLevel());
  }
}

3. What will happen (solve ready code samples : along with mem pics )
day2-data\day2_help\params_passing
3.1 TestParamPassing1.java
3.2 TestParamPassing1.java

4. Hands on

Create a  class Point2D  , under package "com.cdac.geometry" for representing a point in x-y co-ordinate system.

4.1 Create a parameterized constructor to accept x & y co-ords.

4.2 Add  show() method  --to return point's x & y co-ords
eg : public String show() {.....}

4.3 Add a non static  , isEqual method to Point2D class : boolean returning method : must return true if both points are having same x,y co-ords or false otherwise.
eg : public boolean isEqual(Point2d anotherPoint)
{
 return this.x == anotherPoint.x && ....;
}

eg : p1.isEqual(p2);

4.4 Add a non static method , calculateDistance , to calc distance between 2 points
Hint : use distance formula.

eg : In Tester :
double distance=p1.calculateDistance(p2);

In Point2D class
import static java.lang.Math.*;

public double calculateDistance(Point2d anotherPoint)
{
   return sqrt(pow(this.x-anotherPoint.x,2),......);
}

4.5  Create a driver  class(for UI)  , in the "tester" package "TestPoint" , with main(..)

4.6  Accept x,y co-ordinates for 2 points n store the info.
4.7  Display x,y co-ordinates of both of the points plotted  (using show() method)
4.8  Find out if the points  are same or different (Hint : isEqual)
Print the message accordingly. (print SAME or DIFFERENT)
If points are not same , display distance between these 2 points.
------------------------
Extra question1 :
1. Conside below class.
class Emp
{
  private int id;
  private String name;
  private static int noOfEmps;
}
Suppose you create , 10 emps objects, 

How many copies of
id : 10
name : 10
noOfEmps : 1

2. in Test class , in highlighted code(line no 1--6) , how many classes ? 0
how many objs ? 0
JVM is simply allocating the mem to store : 6 refs(pointers)
psvm(....) { 
1. Scanner sc;
2. Emp e;
3. Box b;
4. Date d;
5. String s;
6. int[] data;
}

Day 3
1. import eclipse project day3.1 , in your core java workspace.
Revise it completely using today's sequence , readmes n diagrams

2. Complete pending work

3. Hands on
Continue with day3.1 project , TestBoxArray

 Double box width for all boxes having volume > 100.
Can you use for-each for above requirement ?
If yes , Try it out !

4. If you have completed Point2D based day2 assignment , try this.

4.1   Create a driver  class(for UI)  , in the "tester" package "TestPoints" , with main(..)

Ask user , how many points to plot? : 100
Create suitable array.
4.2  Accept x,y co-ordinates for all the points n store it suitably. : for loop
4.3   Display x,y co-ordinates of all the points plotted so far ,using for-each loop.
4.4   Accept 2 indices from user .
Find out if the points at these indices are same or different (Hint : isEqual)
Print the message accordingly. 
If points are not same , display distance between these 2 points.
eg : In Tester 
sop("Enter 2 indices");
int index1=...
int index2=...
if (....validate indices ....)
{
   if(points[index1].isEqual(....) .....
}
else 
sop(err mesg!);

Draw mem diagram for your clarity.


Day 4

NO new assignments !!!!!

1. import day4.1 eclipse project in your workspace.
Refer to today's sequence , whiteboards n readmes , to revise 
arrays
inheritance
run time polymorphism

2. MUST complete pending work.