Today's Topics
Revision
Enter IDE
Complete pending sequence of yesterday.
static keyword revise
revise Arrays
Enter Inheritance


Revise
Have you solved tank assignment ?
Have you solved passing params assignment?

What will happen ?
Box b1=new Box(1,2,3);
Box b2=new Box(4,5,6);
b2=b1;//Are there any objs marked for GC ? YES : 2nd  Box (4.0 5.0 6.0)
b1=null;//Are there any additional objs marked for GC ? NO
b2=null;//Are there any objs marked for GC ? YES : 1st Box (1.0 2.0 3.0)
Box b3=new Box(10,20,30);
b3=new Box(11,21,31);//Are there any objs marked for GC ? YES : 3rd box (10.0 20.0 30.0)

Enter IDE

Continue with day2's pending sequence

1. Create Cubes
eg : sop("Enter side of a cube");
Box cube=new Box(sc.nextDouble());

Box class
public Box(double side)
{
// width=depth=height=side;
 this(side,side,side);//ctor chaining
}

2. Add a method to Box class to compare equality of 2 boxes & test it
Meaning : 2 boxes are same : iff dims are same
eg : sop("Enter box 1 dims") //10 20 30
Box b1=new Box(....);
sop("Enter box 2 dims") //20 10 30
Box b2=new Box(....);
boolean flag=b1.isEqual(b2);//invoker(this) :b1   arg  : b2
sop(b1.hashCode()+" "+b2.hashCode());
OR
boolean flag=b2.isEqual(b1);//invoker(this) : b2   arg : b1

Box class :
public boolean isEqual(Box anotherBox) //this=b1, anotherBox=b2
{
sop(this.hashCode()+" "+anotherBox.hashCode());
 return this.width==anotherBox.width && ....;
}




3. Add a method to Box class to return a new Box with modified offset dims & test it with the tester.
eg : Box b1=new Box(...);//10 20 30
sop("enter offsets in dim for creating new box w.r.t earlier box : wOff doff hoff");
If user supplies these offsets :  3 -4 5 
A new box object should be created with dims : 13 16 35
Box newBox=b1.createNewBox(.....);

Box class method : non static method
public Box createNewBox(....)
{
  Box newBox1 =new Box(this.width+wOff,....); 
  return newBox1;
}//method rets : newBox1 


4.
Regarding static keyword 


5. Arrays 
Regarding Arrays
refer -- Java Tut slides No  29
In Java, arrays are full-fledged objects. Like objects, arrays are dynamically created & stored on the heap. 

Arrays (like any other object) are  associated with the class. All arrays of the same dimension and type have the same class. The length of an array does not play any role in establishing the array's class. For example, an array of three ints has the same class as an array of three hundred ints.([I) The length of an array is considered part of its instance data.

eg : The class name for single dimension array of ints is "[I". The class name for a three-dimensional array of bytes is "[[[B". The class name for single dimension array of booleans is "[Z"

Array size(length) is fixed.Implicit super class of array is java.lang.Object.


2.1 Create Array of primitive types

Objective -- Accept no of data samples(of type double) from User(using scanner)
Create suitable array & display it using for-loop , to confirm default values.

Accept data from User(scanner) & store it in the array.
Display array data using  for loop.

Display array data using for-each loop

for-each loop(enhanced for loop)
syntax
eg : Display array data using for-each loop

Important statement
for-each loop Works on a copy of array element.

for-each limitations
1. Can only iterate from 1st elem to last elem , with step size +1
2. Works on a copy of array elems
(can't be used for modifying array elems).


2.2 Array of references

Add Box class into "com.cdac.core"
Create a tester class  : TestBoxArray in package  "tester"

Objective : Ask user(client) , how many boxes to make ?
sop("Enter no of boxes ");//10
Box[] boxes=new Box[sc.nextInt()];//objs : 1 : only array obj is created in heap, CP , length=10,
0.....9 : null , name of cls : [Lcom.cdac.core.Box

Create suitable array to hold Box type refs.

Accept Box dims 
for(....)
{ 
sop("Enter box dims");
 boxes[i]=new Box(.....);
}
//1 :array + 10 Box objs : created separately in the heap(outside the array)

Store these details suitably.
1. Display using single for-each loop, box dims n volume
 for (Box b : boxes)
{
  sop(b.getBoxDims();
 .....
}






-------------------Pending -----------------
Enter Inheritance 
refer to "readme inheritance.txt" from today's help.
Person-Student-Faculty scenarion (constr invocation in inheritance hierarchy)


What is inheritance ?
Important part of OOP 
Represents IS A relationship
Higher hierarchy : super class
lower hierarchy :sub class
key word : extends
eg : class Emp extends Object{....}
class Mgr extends Emp {...}
class SalesMgr extends Mgr {...}
Universal super class : java.lang.Object

Why : Reduces redundancy , increases re usability
Types : single , multilevel  ,hierarchial , multiple (not supported) : ambiguity

constr invocation in inheritance hierarchy : refer to diag.
